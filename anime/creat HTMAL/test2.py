import json
import os
import re
from selenium import webdriver
from selenium.webdriver.edge.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.edge.options import Options
from webdriver_manager.microsoft import EdgeChromiumDriverManager
import requests
def sanitize_filename(name):
    """إزالة أو استبدال الأحرف غير المسموح بها في أسماء المجلدات والملفات"""
    return re.sub(r'[\\/*?:"<>|]', '', name)

def download_image(image_url, save_path):
    try:
        response = requests.get(image_url, stream=True)
        if response.status_code == 200:
            with open(save_path, 'wb') as file:
                for chunk in response.iter_content(1024):
                    file.write(chunk)
            print(f"✅ تم تحميل الصورة: {save_path}")
        else:
            print(f"❌ فشل تحميل الصورة، رمز الاستجابة: {response.status_code}")
    except Exception as e:
        print(f"❌ حدث خطأ أثناء تحميل الصورة: {e}")

def fetch_anime_data(url):
    # إعداد Selenium لمتصفح Edge
    options = Options()
    options.add_argument("--log-level=3")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-software-rasterizer")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--remote-debugging-port=0")
    driver = webdriver.Edge(service=Service(EdgeChromiumDriverManager().install()), options=options)
    
    try:
        driver.get(url)
        driver.implicitly_wait(10)  # انتظار تحميل العناصر لمدة 10 ثوانٍ

        def safe_find(xpath):
            try:
                return driver.find_element(By.XPATH, xpath).text.strip()
            except:
                return "غير متوفر"

        def safe_find_attr(xpath, attr):
            try:
                return driver.find_element(By.XPATH, xpath).get_attribute(attr).strip()
            except:
                return "غير متوفر"

        anime_data = {
            "title": sanitize_filename(safe_find("/html/body/div[2]/div/div/div[2]/div/h1")),
            "image": safe_find_attr("/html/body/div[2]/div/div/div[1]/div/img", "src"),
            "episodes": safe_find("/html/body/div[2]/div/div/div[2]/div/div[1]/div[4]/div/text()"),
            "categories": [cat.text.strip() for cat in driver.find_elements(By.XPATH, "/html/body/div[2]/div/div/div[2]/div/ul/li/a")],
            "status": safe_find("/html/body/div[2]/div/div/div[2]/div/div[1]/div[3]/div/a"),
            "season": safe_find("/html/body/div[2]/div/div/div[2]/div/div[1]/div[6]/div/a"),
            "story": safe_find("/html/body/div[2]/div/div/div[2]/div/p"),
            "watch_url": "المشاهده.html"
        }

        return anime_data

    except Exception as e:
        print(f"❌ حدث خطأ أثناء استخراج البيانات: {e}")
        return None
    finally:
        driver.quit()  # إغلاق المتصفح بعد الانتهاء

def load_template(filename):
    with open(filename, "r", encoding="utf-8") as file:
        return file.read()

def replace_placeholders(template, anime):
    replacements = {
        "Medalist": anime["title"],
        "Medalist.webp": anime["image"],
        "<strong>عدد الحلقات:</strong>": f"<strong>عدد الحلقات:</strong> {anime['episodes']}",
        "<strong>التصنيف:</strong>": "<strong>التصنيف:</strong> {}".format(
            ' '.join(f'<button class="icon-button1"><a href="../../../tag/wep/category.html?category={cat}">{cat}</a></button>' for cat in anime['categories'])
        ),
        "<strong>حالة الأنمي:</strong>": f"<strong>حالة الأنمي:</strong> <button class='icon-button1'><a href='../../../tag/wep/category.html?category={anime['status']}'>{anime['status']}</a></button>",
        "<strong>الموسم:</strong>": f"<strong>الموسم:</strong> <button class='icon-button1'><a href='../../../tag/wep/category.html?category={anime['season']}'>{anime['season']}</a></button>",
        "<h2>القصة:</h2>": f"<h2>Story:</h2> <p>{anime['story']}</p>"
    }
    for key, value in replacements.items():
        template = template.replace(key, value)
    return template

def create_anime_files(anime, medalist_template, watch_template):
    safe_title = sanitize_filename(anime["title"])  # تصفية الاسم
    
    profile_folder = os.path.join(safe_title, "Profile")
    episodes_folder = os.path.join(safe_title, "episodes")
    
    os.makedirs(profile_folder, exist_ok=True)
    os.makedirs(episodes_folder, exist_ok=True)

    if anime["image"] and anime["image"] != "غير متوفر":
        image_filename = safe_title + ".webp"
        image_path = os.path.join(image_filename)
        download_image(anime["image"], image_path)
        anime["image"] = image_path  # تحديث المسار المحلي للصورة
    else:
        print("⚠️ لم يتم العثور على رابط الصورة.")
        
    with open(os.path.join(profile_folder, f"{safe_title}.html"), "w", encoding="utf-8") as file:
        file.write(replace_placeholders(medalist_template, anime))
    
    with open(os.path.join(episodes_folder, "المشاهده.html"), "w", encoding="utf-8") as file:
        file.write(replace_placeholders(watch_template, anime))
    
    
    with open(os.path.join(safe_title, "episodes.json"), "w", encoding="utf-8") as file:
        json.dump([], file, ensure_ascii=False, indent=4)

    anime_data = {
        "name": safe_title,
        "rating": anime["status"],
        "link": f"https://abdo12249.github.io/1/anime/{safe_title}/Profile/{safe_title}.html",
        "categories": anime["categories"] + [anime["season"], anime["status"]],
        "image": f"https://abdo12249.github.io/1/images/{safe_title}.webp"
    }
    
    with open(os.path.join(safe_title, f"{safe_title}.json"), "w", encoding="utf-8") as file:
        json.dump(anime_data, file, ensure_ascii=False, indent=4)


def main():
    url = input("Enter anime page URL: ").strip()
    anime = fetch_anime_data(url)

    if anime:
        medalist_template = load_template("Medalist.html")
        watch_template = load_template("المشاهده.html")
        create_anime_files(anime, medalist_template, watch_template)
        print("✅ Anime data fetched and files created successfully!")
    else:
        print("❌ فشل في استخراج بيانات الأنمي.")

if __name__ == "__main__":
    main()
